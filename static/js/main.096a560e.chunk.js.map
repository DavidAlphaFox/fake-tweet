{"version":3,"sources":["lib/Tweet.js","App.js","serviceWorker.js","index.js"],"names":["Tweet","props","styleNumber","num","div","toFixed","replace","verifiedIcon","className","viewBox","aria-label","d","lockIcon","src","config","user","avatar","alt","name","options","verified","locked","nickname","text","image","date","app","retweets","likes","App","useState","setNickname","setName","setAvatar","setVerified","setLocked","setText","setImage","setDate","setApp","setRetweets","setLikes","htmlFor","type","id","value","onChange","e","target","checked","val","maxLength","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.096a560e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Tweet.css';\r\nimport Twemoji from 'react-twemoji';\r\n\r\nfunction Tweet(props) {\r\n\r\n    function styleNumber(num) {\r\n        let div = num / 1000000;\r\n        if (div >= 1) {\r\n            return div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + \"M\";\r\n        }\r\n        div = num / 1000;\r\n        if (div >= 1) {\r\n            return div.toFixed(1).replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1') + \"K\";\r\n        }\r\n        return num;\r\n    }\r\n\r\n    const verifiedIcon =\r\n        <div className=\"icon\">\r\n            <svg viewBox=\"0 0 24 24\" aria-label=\"Verified account\" className=\"verified-icon-svg\">\r\n                <g>\r\n                    <path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path>\r\n                </g>\r\n            </svg>\r\n        </div>;\r\n\r\n    const lockIcon =\r\n        <div className=\"icon\">\r\n            <svg viewBox=\"0 0 24 24\" aria-label=\"Verified account\" className=\"lock-icon-svg\">\r\n                <g>\r\n                    <path d=\"M19.75 7.31h-1.88c-.19-3.08-2.746-5.526-5.87-5.526S6.32 4.232 6.13 7.31H4.25C3.01 7.31 2 8.317 2 9.56v10.23c0 1.24 1.01 2.25 2.25 2.25h15.5c1.24 0 2.25-1.01 2.25-2.25V9.56c0-1.242-1.01-2.25-2.25-2.25zm-7 8.377v1.396c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-1.396c-.764-.3-1.307-1.04-1.307-1.91 0-1.137.92-2.058 2.057-2.058 1.136 0 2.057.92 2.057 2.056 0 .87-.543 1.61-1.307 1.91zM7.648 7.31C7.838 5.06 9.705 3.284 12 3.284s4.163 1.777 4.352 4.023H7.648z\"></path>\r\n                </g>\r\n            </svg>\r\n        </div>;\r\n\r\n    return (\r\n        <div className=\"tweet\">\r\n            <div className=\"user-info\">\r\n                <div className=\"avatar-container\">\r\n                    <img className=\"avatar\" src={props.config.user.avatar}\r\n                        alt={props.config.user.name + \" avatar\"} />\r\n                </div>\r\n                <div className=\"user-info-right\">\r\n                    <div className=\"drop-button\">\r\n                        <svg viewBox=\"0 0 24 24\"><g><path d=\"M20.207 8.147c-.39-.39-1.023-.39-1.414 0L12 14.94 5.207 8.147c-.39-.39-1.023-.39-1.414 0-.39.39-.39 1.023 0 1.414l7.5 7.5c.195.196.45.294.707.294s.512-.098.707-.293l7.5-7.5c.39-.39.39-1.022 0-1.413z\"></path></g></svg>\r\n                    </div>\r\n                    <div className=\"user-name\">\r\n                        <Twemoji options={{ className: 'twemoji-sm' }} className=\"user-name-txt\">\r\n                            <span className=\"fake-link\">{props.config.user.name}</span>\r\n                        </Twemoji>\r\n                        {props.config.user.verified && verifiedIcon}\r\n                        {props.config.user.locked && !props.config.user.verified && lockIcon}\r\n                    </div>\r\n                    <div className=\"user-nickname\">@{props.config.user.nickname}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"tweet-text\">\r\n                { typeof props.config.text !== \"undefined\" && props.config.text !== '' && <div className=\"txt\"><Twemoji options={{ className: 'twemoji-bg' }}>{props.config.text}</Twemoji></div>}\r\n                {typeof props.config.image !== \"undefined\" && props.config.image !== \"\" &&\r\n                    <div className=\"image-container\">\r\n                        <img src={props.config.image} alt=\"\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"date-app-details\">\r\n                {props.config.date} · <span className=\"fake-link app\">{props.config.app}</span>\r\n            </div>\r\n            <div className=\"rt-likes\">\r\n                <span className=\"fake-link num-rts\"><strong>{styleNumber(props.config.retweets)}</strong> Retweets</span>\r\n                <span className=\"fake-link num-likes\"><strong>{styleNumber(props.config.likes)}</strong> Likes</span>\r\n            </div>\r\n            <div className=\"bottom-buttons\">\r\n                <div className=\"bottom-button blue\"><div><svg viewBox=\"0 0 24 24\"><g><path d=\"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\"></path></g></svg></div></div>\r\n                <div className=\"bottom-button green\"><div><svg viewBox=\"0 0 24 24\"><g><path d=\"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\"></path></g></svg></div></div>\r\n                <div className=\"bottom-button red\"><div><svg viewBox=\"0 0 24 24\"><g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g></svg></div></div>\r\n                <div className=\"bottom-button blue\"><div><svg viewBox=\"0 0 24 24\"><g><path d=\"M17.53 7.47l-5-5c-.293-.293-.768-.293-1.06 0l-5 5c-.294.293-.294.768 0 1.06s.767.294 1.06 0l3.72-3.72V15c0 .414.336.75.75.75s.75-.336.75-.75V4.81l3.72 3.72c.146.147.338.22.53.22s.384-.072.53-.22c.293-.293.293-.767 0-1.06z\"></path><path d=\"M19.708 21.944H4.292C3.028 21.944 2 20.916 2 19.652V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 .437.355.792.792.792h15.416c.437 0 .792-.355.792-.792V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 1.264-1.028 2.292-2.292 2.292z\"></path></g></svg></div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tweet;","import React, { useState } from 'react';\nimport './App.css';\nimport Tweet from './lib/Tweet';\n\nfunction App() {\n\n  const [nickname, setNickname] = useState(\"LFC\");\n  const [name, setName] = useState(\"Liverpool FC\");\n  const [avatar, setAvatar] = useState(\"https://pbs.twimg.com/profile_images/1202545168542511104/sEunL4Iq_400x400.jpg\");\n  const [verified, setVerified] = useState(true);\n  const [locked, setLocked] = useState(false);\n  const [text, setText] = useState(\"🏆 WE’RE CLUB WORLD CHAMPIONS!! 🏆\");\n  const [image, setImage] = useState(\"https://pbs.twimg.com/media/EMVe-JgWwAEwrdw?format=jpg&name=small\");\n  const [date, setDate] = useState(\"9:06 PM · Dec 21, 2019\");\n  const [app, setApp] = useState(\"Twitter Media Studio\");\n  const [retweets, setRetweets] = useState(48900);\n  const [likes, setLikes] = useState(180500);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Tweet config={\n          {\n            user: {\n              nickname: nickname,\n              name: name,\n              avatar: avatar,\n              verified: verified,\n              locked: locked\n            },\n            text: text,\n            image: image,\n            date: date,\n            app: app,\n            retweets: retweets,\n            likes: likes\n          }\n        } />\n        <div>\n          <form className=\"config\">\n            <fieldset>\n              <legend>User</legend>\n              <div>\n                <label htmlFor=\"nickame\">Nickname</label>\n                <input type=\"text\" id=\"nickname\" value={nickname} onChange={e => setNickname(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"nickame\">Name</label>\n                <input type=\"text\" id=\"name\" value={name} onChange={e => setName(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"nickame\">Avatar</label>\n                <input type=\"text\" id=\"avatar\" value={avatar} onChange={e => setAvatar(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"verified\">Verified</label>\n                <input type=\"checkbox\" id=\"verified\" checked={verified} onChange={e => {\n                  const val = e.target.checked;\n                  setVerified(val);\n                  if (val && locked) setLocked(false);\n                }} />\n              </div>\n              <div>\n                <label htmlFor=\"locked\">Locked</label>\n                <input type=\"checkbox\" id=\"locked\" checked={locked} onChange={e => {\n                  const val = e.target.checked;\n                  setLocked(val);\n                  if (val && verified) setVerified(false);\n                }} />\n              </div>\n            </fieldset>\n            <fieldset>\n              <legend>Tweet</legend>\n              <div>\n                <label htmlFor=\"text\">Text</label>\n                <textarea id=\"text\" value={text} onChange={e => setText(e.target.value)}\n                  maxLength=\"280\"></textarea>\n              </div>\n              <div>\n                <label htmlFor=\"image\">Image</label>\n                <input type=\"text\" id=\"image\" value={image} onChange={e => setImage(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"text\" id=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"app\">App</label>\n                <input type=\"text\" id=\"app\" value={app} onChange={e => setApp(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"retweets\">Retweets</label>\n                <input type=\"number\" id=\"retweets\" value={retweets} onChange={e => setRetweets(e.target.value)} />\n              </div>\n              <div>\n                <label htmlFor=\"likes\">Likes</label>\n                <input type=\"number\" id=\"likes\" value={likes} onChange={e => setLikes(e.target.value)} />\n              </div>\n            </fieldset>\n          </form>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}